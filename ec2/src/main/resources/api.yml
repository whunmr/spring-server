# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger EC2
  description: "This is the API of EC2 service. You can find out more about the service at [http://example.com/ec2](http://example.com/ec2)."
  license:
    name: Example 2.0
    url: http://www.example.com/licenses/LICENSE-2.0.html

host: "ec2.example.com"
basePath: "/"
schemes:
  - "http"
  - "https"

produces:
  - application/json

tags:
  - name: instance
    description: "API about EC2 Instance"
  - name: region
    description: "API about region of EC2 Instance"

paths:
  /instances:
    get:
      summary: 查找实例基本信息
      operationId: findInstances
      tags:
        - Instance
      parameters:
        - name: region
          in: query
          description: 区域
          type: string
          required: false
      responses:
        200:
          description: OK
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/InstanceList'
        401:
          description: Unauthorized
          headers:
            Content-Type:
              type: string
              description: the response media type
        406:
          description: Not Acceptable
          headers:
            Content-Type:
              type: string
              description: the response media type
        500:
          description: Unexpected error
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
    post:
      summary: 新建EC2实例
      operationId: createInstances
      tags:
        - Instance
      description: user wants to create a new instance
      parameters:
        - name: body
          in: body
          description: new instance info
          schema:
            $ref: '#/definitions/InstanceCreateRequest'
      responses:
        200:
          description: Accepted
          headers:
            Content-Type:
              type: string
              description: the response media type
            Content-Location:
              type: string
              description: the uri of querying result
          schema:
            $ref: '#/definitions/InstanceResponse'

        400:
          description: Bad Request
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
        401:
          description: Unauthorized
          headers:
            Content-Type:
              type: string
              description: the response media type
        403:
          description: Forbidden
          headers:
            Content-Type:
              type: string
              description: the response media type
        406:
          description: Not Acceptable
          headers:
            Content-Type:
              type: string
              description: the response media type
        415:
          description: Unsupported Media Type
          headers:
            Content-Type:
              type: string
              description: the response media type
        500:
          description: Unexpected error
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
  /instances/{instanceId}/action:
    put:
      summary: 对实例进行操作
      operationId: operateInstance
      tags:
        - Instance
      parameters:
        - name: instanceId
          type: string
          in: path
          description: 实例唯一标识
          required: true
        - name: action
          type: string
          in: query
          description: 对实例的操作，如start
      responses:
        200:
          description: OK
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/InstanceResponse'
  /flavors:
    post:
      summary: 新建Flavor
      operationId: createFlavors
      tags:
        - Flavor
      description: admin wants to create a new flavor
      parameters:
        - name: body
          in: body
          description: new flavor info
          schema:
            $ref: '#/definitions/FlavorCreateRequest'
      responses:
        200:
          headers:
            Content-Type:
              type: string
              description: the response media type
            Content-Location:
              type: string
              description: the uri of querying result
          schema:
            $ref: '#/definitions/FlavorResponse'

        400:
          description: Bad Request
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
        401:
          description: Unauthorized
          headers:
            Content-Type:
              type: string
              description: the response media type
        403:
          description: Forbidden
          headers:
            Content-Type:
              type: string
              description: the response media type
        406:
          description: Not Acceptable
          headers:
            Content-Type:
              type: string
              description: the response media type
        415:
          description: Unsupported Media Type
          headers:
            Content-Type:
              type: string
              description: the response media type
        500:
          description: Unexpected error
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
  /flavors/{flavorId}:
    get:
      summary: 查找Flavor基本信息
      operationId: findFlavor
      tags:
        - Instance
      parameters:
        - name: flavorId
          in: path
          description: flavor id
          type: string
          required: true
      responses:
        200:
          description: OK
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/FlavorResponse'
        401:
          description: Unauthorized
          headers:
            Content-Type:
              type: string
              description: the response media type
        406:
          description: Not Acceptable
          headers:
            Content-Type:
              type: string
              description: the response media type
        500:
          description: Unexpected error
          headers:
            Content-Type:
              type: string
              description: the response media type
          schema:
            $ref: '#/definitions/failure'
definitions:
  InstanceCreateRequest:
    type: object
    properties:
      data:
        type: object
        required:
          - type
          - id
        properties:
          type:
            type: string
          id:
            type: string
          attributes:
            type: object
            required:
              - name
              - plan
            properties:
              name:
                type: string
              plan:
                type: object
                properties:
                  alias:
                    type: string
                  flavor_id:
                    type: string
                  image_id:
                    type: string
                  az:
                    type: string
  instance:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        type: object
        properties:
          name:
            type: string
          alias:
            type: string
          image_id:
            type: string
          region_id:
            type: string
          status:
            type: string
          flavor_id:
            type: string
      links:
        $ref: '#/definitions/links'
  InstanceCreationJob:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        type: object
        properties:
          result:
            type: string
          result_code:
            type: integer
          result_description:
            type: string
          results:
            type: array
            items:
              type: object
              properties:
                job_id:
                  type: string
                instance_id:
                  type: string
      links:
        $ref: '#/definitions/links'
  failure:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/error'
      meta:
        $ref: '#/definitions/meta'
  error:
    type: object
    properties:
      id:
        description: A unique identifier for the occurrence of the problem
        type: string
      links:
        $ref: '#/definitions/links'
      status:
        description: Http status code
        type: string
      code:
        description: Application specific error code
        type: string
      title:
        type: string
      detail:
        type: string
      source:
        type: object
        properties:
          pointer:
            description: A JSON Pointer[RFC6901] to associated entity in the request document. [e.g. /data for data object, /data/attributes/title for specific attribute
            type: string
          parameter:
            description: A string indicating which query parameter caused error
            type: string
      meta:
        $ref: '#/definitions/meta'
  meta:
    type: object
  links:
    type: object
    properties:
      self:
        type: string
      related:
        type: string
  InstanceList:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/instance'
  InstanceCreationResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/InstanceCreationJob'
  InstanceResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/instance'
  FlavorCreateRequest:
    type: object
    properties:
        data:
          type: object
          properties:
            flavorId:
              type: string
            vCPU:
              type: integer
            memInGiB:
              type: number
  FlavorResponse:
    type: object
    properties:
        data:
          type: object
          properties:
            flavorId:
              type: string
            vCPU:
              type: integer
            memInGiB:
              type: number